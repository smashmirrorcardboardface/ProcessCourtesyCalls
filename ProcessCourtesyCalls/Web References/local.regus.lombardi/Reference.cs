//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ProcessCourtesyCalls.local.regus.lombardi {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CSTS_ExternalIntegrationsSoapSoapBinding", Namespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws")]
    public partial class CSTS_ExternalIntegrations : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CSTS_External_CreateTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTicketByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTicketAsCompleteByCentreOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetTicketAsUpdatedByCentreOperationCompleted;
        
        private System.Threading.SendOrPostCallback TicketLockingOperationCompleted;
        
        private System.Threading.SendOrPostCallback processCourtesyCallsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CSTS_ExternalIntegrations() {
            this.Url = global::ProcessCourtesyCalls.Properties.Settings.Default.ProcessCourtesyCalls_local_regus_lombardi_CSTS_ExternalIntegrations;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CSTS_External_CreateTicketCompletedEventHandler CSTS_External_CreateTicketCompleted;
        
        /// <remarks/>
        public event GetTicketByIdCompletedEventHandler GetTicketByIdCompleted;
        
        /// <remarks/>
        public event CloseTicketCompletedEventHandler CloseTicketCompleted;
        
        /// <remarks/>
        public event SetTicketAsCompleteByCentreCompletedEventHandler SetTicketAsCompleteByCentreCompleted;
        
        /// <remarks/>
        public event UpdateTicketCompletedEventHandler UpdateTicketCompleted;
        
        /// <remarks/>
        public event SetTicketAsUpdatedByCentreCompletedEventHandler SetTicketAsUpdatedByCentreCompleted;
        
        /// <remarks/>
        public event TicketLockingCompletedEventHandler TicketLockingCompleted;
        
        /// <remarks/>
        public event processCourtesyCallsCompletedEventHandler processCourtesyCallsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws/C" +
            "STS_External_CreateTicket", RequestNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", ResponseNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("errorMessage")]
        public string CSTS_External_CreateTicket(CSTS_External_CreateTicket_Input ticketData, System.DateTime createDate_Override, out string errorCode, out int ticketReference) {
            object[] results = this.Invoke("CSTS_External_CreateTicket", new object[] {
                        ticketData,
                        createDate_Override});
            errorCode = ((string)(results[1]));
            ticketReference = ((int)(results[2]));
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CSTS_External_CreateTicketAsync(CSTS_External_CreateTicket_Input ticketData, System.DateTime createDate_Override) {
            this.CSTS_External_CreateTicketAsync(ticketData, createDate_Override, null);
        }
        
        /// <remarks/>
        public void CSTS_External_CreateTicketAsync(CSTS_External_CreateTicket_Input ticketData, System.DateTime createDate_Override, object userState) {
            if ((this.CSTS_External_CreateTicketOperationCompleted == null)) {
                this.CSTS_External_CreateTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCSTS_External_CreateTicketOperationCompleted);
            }
            this.InvokeAsync("CSTS_External_CreateTicket", new object[] {
                        ticketData,
                        createDate_Override}, this.CSTS_External_CreateTicketOperationCompleted, userState);
        }
        
        private void OnCSTS_External_CreateTicketOperationCompleted(object arg) {
            if ((this.CSTS_External_CreateTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CSTS_External_CreateTicketCompleted(this, new CSTS_External_CreateTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws/G" +
            "etTicketById", RequestNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", ResponseNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ticketInfo")]
        public TicketInfo GetTicketById(int ticketReference, bool rZoneDisplay) {
            object[] results = this.Invoke("GetTicketById", new object[] {
                        ticketReference,
                        rZoneDisplay});
            return ((TicketInfo)(results[0]));
        }
        
        /// <remarks/>
        public void GetTicketByIdAsync(int ticketReference, bool rZoneDisplay) {
            this.GetTicketByIdAsync(ticketReference, rZoneDisplay, null);
        }
        
        /// <remarks/>
        public void GetTicketByIdAsync(int ticketReference, bool rZoneDisplay, object userState) {
            if ((this.GetTicketByIdOperationCompleted == null)) {
                this.GetTicketByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTicketByIdOperationCompleted);
            }
            this.InvokeAsync("GetTicketById", new object[] {
                        ticketReference,
                        rZoneDisplay}, this.GetTicketByIdOperationCompleted, userState);
        }
        
        private void OnGetTicketByIdOperationCompleted(object arg) {
            if ((this.GetTicketByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTicketByIdCompleted(this, new GetTicketByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws/C" +
            "loseTicket", RequestNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", ResponseNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CloseTicket(int ticketReference, string comment) {
            this.Invoke("CloseTicket", new object[] {
                        ticketReference,
                        comment});
        }
        
        /// <remarks/>
        public void CloseTicketAsync(int ticketReference, string comment) {
            this.CloseTicketAsync(ticketReference, comment, null);
        }
        
        /// <remarks/>
        public void CloseTicketAsync(int ticketReference, string comment, object userState) {
            if ((this.CloseTicketOperationCompleted == null)) {
                this.CloseTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseTicketOperationCompleted);
            }
            this.InvokeAsync("CloseTicket", new object[] {
                        ticketReference,
                        comment}, this.CloseTicketOperationCompleted, userState);
        }
        
        private void OnCloseTicketOperationCompleted(object arg) {
            if ((this.CloseTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseTicketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws/S" +
            "etTicketAsCompleteByCentre", RequestNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", ResponseNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetTicketAsCompleteByCentre(int taskId) {
            this.Invoke("SetTicketAsCompleteByCentre", new object[] {
                        taskId});
        }
        
        /// <remarks/>
        public void SetTicketAsCompleteByCentreAsync(int taskId) {
            this.SetTicketAsCompleteByCentreAsync(taskId, null);
        }
        
        /// <remarks/>
        public void SetTicketAsCompleteByCentreAsync(int taskId, object userState) {
            if ((this.SetTicketAsCompleteByCentreOperationCompleted == null)) {
                this.SetTicketAsCompleteByCentreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTicketAsCompleteByCentreOperationCompleted);
            }
            this.InvokeAsync("SetTicketAsCompleteByCentre", new object[] {
                        taskId}, this.SetTicketAsCompleteByCentreOperationCompleted, userState);
        }
        
        private void OnSetTicketAsCompleteByCentreOperationCompleted(object arg) {
            if ((this.SetTicketAsCompleteByCentreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTicketAsCompleteByCentreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws/U" +
            "pdateTicket", RequestNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", ResponseNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("publicQuestion")]
        public bool UpdateTicket(TicketInfoWebService ticketInfoWS, string newUpdate, string commentType, bool commentOnly, string userName, bool reopenedFromJobTracker, ref bool privateComment, ref int addCommsIncAllComms, ref string addCommsTO, ref string addCommsCC, out bool nonContactPersonComms, out bool hasBeenReassigned) {
            object[] results = this.Invoke("UpdateTicket", new object[] {
                        ticketInfoWS,
                        newUpdate,
                        commentType,
                        commentOnly,
                        userName,
                        reopenedFromJobTracker,
                        privateComment,
                        addCommsIncAllComms,
                        addCommsTO,
                        addCommsCC});
            privateComment = ((bool)(results[1]));
            addCommsIncAllComms = ((int)(results[2]));
            addCommsTO = ((string)(results[3]));
            addCommsCC = ((string)(results[4]));
            nonContactPersonComms = ((bool)(results[5]));
            hasBeenReassigned = ((bool)(results[6]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateTicketAsync(TicketInfoWebService ticketInfoWS, string newUpdate, string commentType, bool commentOnly, string userName, bool reopenedFromJobTracker, bool privateComment, int addCommsIncAllComms, string addCommsTO, string addCommsCC) {
            this.UpdateTicketAsync(ticketInfoWS, newUpdate, commentType, commentOnly, userName, reopenedFromJobTracker, privateComment, addCommsIncAllComms, addCommsTO, addCommsCC, null);
        }
        
        /// <remarks/>
        public void UpdateTicketAsync(TicketInfoWebService ticketInfoWS, string newUpdate, string commentType, bool commentOnly, string userName, bool reopenedFromJobTracker, bool privateComment, int addCommsIncAllComms, string addCommsTO, string addCommsCC, object userState) {
            if ((this.UpdateTicketOperationCompleted == null)) {
                this.UpdateTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTicketOperationCompleted);
            }
            this.InvokeAsync("UpdateTicket", new object[] {
                        ticketInfoWS,
                        newUpdate,
                        commentType,
                        commentOnly,
                        userName,
                        reopenedFromJobTracker,
                        privateComment,
                        addCommsIncAllComms,
                        addCommsTO,
                        addCommsCC}, this.UpdateTicketOperationCompleted, userState);
        }
        
        private void OnUpdateTicketOperationCompleted(object arg) {
            if ((this.UpdateTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTicketCompleted(this, new UpdateTicketCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws/S" +
            "etTicketAsUpdatedByCentre", RequestNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", ResponseNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetTicketAsUpdatedByCentre(int taskId) {
            this.Invoke("SetTicketAsUpdatedByCentre", new object[] {
                        taskId});
        }
        
        /// <remarks/>
        public void SetTicketAsUpdatedByCentreAsync(int taskId) {
            this.SetTicketAsUpdatedByCentreAsync(taskId, null);
        }
        
        /// <remarks/>
        public void SetTicketAsUpdatedByCentreAsync(int taskId, object userState) {
            if ((this.SetTicketAsUpdatedByCentreOperationCompleted == null)) {
                this.SetTicketAsUpdatedByCentreOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetTicketAsUpdatedByCentreOperationCompleted);
            }
            this.InvokeAsync("SetTicketAsUpdatedByCentre", new object[] {
                        taskId}, this.SetTicketAsUpdatedByCentreOperationCompleted, userState);
        }
        
        private void OnSetTicketAsUpdatedByCentreOperationCompleted(object arg) {
            if ((this.SetTicketAsUpdatedByCentreCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetTicketAsUpdatedByCentreCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws/T" +
            "icketLocking", RequestNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", ResponseNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void TicketLocking(bool isNewTicket, int ticketReference, bool lockTicket, string lockedByUserId) {
            this.Invoke("TicketLocking", new object[] {
                        isNewTicket,
                        ticketReference,
                        lockTicket,
                        lockedByUserId});
        }
        
        /// <remarks/>
        public void TicketLockingAsync(bool isNewTicket, int ticketReference, bool lockTicket, string lockedByUserId) {
            this.TicketLockingAsync(isNewTicket, ticketReference, lockTicket, lockedByUserId, null);
        }
        
        /// <remarks/>
        public void TicketLockingAsync(bool isNewTicket, int ticketReference, bool lockTicket, string lockedByUserId, object userState) {
            if ((this.TicketLockingOperationCompleted == null)) {
                this.TicketLockingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTicketLockingOperationCompleted);
            }
            this.InvokeAsync("TicketLocking", new object[] {
                        isNewTicket,
                        ticketReference,
                        lockTicket,
                        lockedByUserId}, this.TicketLockingOperationCompleted, userState);
        }
        
        private void OnTicketLockingOperationCompleted(object arg) {
            if ((this.TicketLockingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TicketLockingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws/p" +
            "rocessCourtesyCalls", RequestNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", ResponseNamespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void processCourtesyCalls() {
            this.Invoke("processCourtesyCalls", new object[0]);
        }
        
        /// <remarks/>
        public void processCourtesyCallsAsync() {
            this.processCourtesyCallsAsync(null);
        }
        
        /// <remarks/>
        public void processCourtesyCallsAsync(object userState) {
            if ((this.processCourtesyCallsOperationCompleted == null)) {
                this.processCourtesyCallsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnprocessCourtesyCallsOperationCompleted);
            }
            this.InvokeAsync("processCourtesyCalls", new object[0], this.processCourtesyCallsOperationCompleted, userState);
        }
        
        private void OnprocessCourtesyCallsOperationCompleted(object arg) {
            if ((this.processCourtesyCallsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.processCourtesyCallsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1531.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws")]
    public partial class CSTS_External_CreateTicket_Input {
        
        private System.Nullable<int> sourceSystemIdField;
        
        private System.Nullable<int> categoryIdField;
        
        private System.Nullable<int> subCategoryIdField;
        
        private string contactNameField;
        
        private string contactPhoneField;
        
        private string contactEmailField;
        
        private System.Nullable<int> centreNumberField;
        
        private string centreNameField;
        
        private System.Nullable<int> titanCompanyIdField;
        
        private string companyNameField;
        
        private string businessWorldNumberField;
        
        private string ticketDescriptionField;
        
        private string countryNameField;
        
        private string countryCodeField;
        
        private string msgSubjectField;
        
        private System.Nullable<System.DateTime> receivedDateField;
        
        private System.Nullable<bool> invisibleToCentreField;
        
        private System.Nullable<int> productTypeIDField;
        
        private System.Nullable<int> sourceSystemSubIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> sourceSystemId {
            get {
                return this.sourceSystemIdField;
            }
            set {
                this.sourceSystemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> categoryId {
            get {
                return this.categoryIdField;
            }
            set {
                this.categoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> subCategoryId {
            get {
                return this.subCategoryIdField;
            }
            set {
                this.subCategoryIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contactPhone {
            get {
                return this.contactPhoneField;
            }
            set {
                this.contactPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string contactEmail {
            get {
                return this.contactEmailField;
            }
            set {
                this.contactEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> centreNumber {
            get {
                return this.centreNumberField;
            }
            set {
                this.centreNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string centreName {
            get {
                return this.centreNameField;
            }
            set {
                this.centreNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> titanCompanyId {
            get {
                return this.titanCompanyIdField;
            }
            set {
                this.titanCompanyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string companyName {
            get {
                return this.companyNameField;
            }
            set {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string businessWorldNumber {
            get {
                return this.businessWorldNumberField;
            }
            set {
                this.businessWorldNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ticketDescription {
            get {
                return this.ticketDescriptionField;
            }
            set {
                this.ticketDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string countryName {
            get {
                return this.countryNameField;
            }
            set {
                this.countryNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string countryCode {
            get {
                return this.countryCodeField;
            }
            set {
                this.countryCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string msgSubject {
            get {
                return this.msgSubjectField;
            }
            set {
                this.msgSubjectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> receivedDate {
            get {
                return this.receivedDateField;
            }
            set {
                this.receivedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> invisibleToCentre {
            get {
                return this.invisibleToCentreField;
            }
            set {
                this.invisibleToCentreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> productTypeID {
            get {
                return this.productTypeIDField;
            }
            set {
                this.productTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> sourceSystemSubId {
            get {
                return this.sourceSystemSubIdField;
            }
            set {
                this.sourceSystemSubIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1531.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws")]
    public partial class TicketInfoWebService {
        
        private System.Nullable<int> ticketReferenceField;
        
        private System.Nullable<System.DateTime> createDateField;
        
        private string createUserField;
        
        private System.Nullable<int> categoryIDField;
        
        private string categoryField;
        
        private System.Nullable<int> subCategoryIDField;
        
        private string subCategoryField;
        
        private System.Nullable<int> tWInstanceField;
        
        private System.Nullable<int> ticketStatusIDField;
        
        private string ticketStatusDescriptionField;
        
        private System.Nullable<int> priorityField;
        
        private System.Nullable<bool> urgentField;
        
        private string assignedToField;
        
        private string requesterNameField;
        
        private string requesterEmailField;
        
        private string requesterTelephoneField;
        
        private System.Nullable<int> requesterTimeZoneKeyField;
        
        private string requesterTimeZoneNameField;
        
        private System.Nullable<int> requesterTimeZoneBiasField;
        
        private string thirdPartyField;
        
        private string thirdPartyReferenceField;
        
        private System.Nullable<System.DateTime> resolvedDateField;
        
        private System.Nullable<System.DateTime> closedDateField;
        
        private string clientImpactedNameField;
        
        private System.Nullable<int> clientImpactedTitanIDField;
        
        private string sWRefField;
        
        private string contactNameField;
        
        private string contactEmailField;
        
        private string contactEmailConfirmedField;
        
        private string contactTelephoneField;
        
        private System.Nullable<int> centreNumberField;
        
        private string centreNameField;
        
        private string centreEmailField;
        
        private string centreTelephoneField;
        
        private string centreCountryField;
        
        private System.Nullable<bool> nonContactCallField;
        
        private System.Nullable<int> resolutionCodeField;
        
        private System.Nullable<int> issueTypeIDField;
        
        private System.Nullable<System.DateTime> sLADateField;
        
        private string employeeIdField;
        
        private System.Nullable<System.DateTime> requiredByDateField;
        
        private System.Nullable<System.DateTime> serviceLostDateField;
        
        private System.Nullable<System.DateTime> serviceRestoredDateField;
        
        private System.Nullable<int> agentTaskIDField;
        
        private System.Nullable<int> systemSourceField;
        
        private string systemSourceNameField;
        
        private System.Nullable<int> systemSourceSubIdField;
        
        private string systemSourceSubNameField;
        
        private System.Nullable<int> closureCodeIDField;
        
        private string closureCodeDescField;
        
        private System.Nullable<int> assignedTeamIDField;
        
        private string assignedTeamNameField;
        
        private System.Nullable<int> titanCompanyIdField;
        
        private string titanBwRefField;
        
        private System.Nullable<System.DateTime> assignedDateField;
        
        private string ticketAgeField;
        
        private string slaExpiryField;
        
        private string websiteUrlField;
        
        private System.Nullable<int> inputTypeIdField;
        
        private string rSCNameRegionField;
        
        private System.Nullable<System.DateTime> receiveDateField;
        
        private System.Nullable<double> versionIdField;
        
        private System.Nullable<int> responseTypeIDField;
        
        private System.Nullable<bool> invisibleToCentreField;
        
        private System.Nullable<int> typeIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TicketReference {
            get {
                return this.ticketReferenceField;
            }
            set {
                this.ticketReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SubCategoryID {
            get {
                return this.subCategoryIDField;
            }
            set {
                this.subCategoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SubCategory {
            get {
                return this.subCategoryField;
            }
            set {
                this.subCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TWInstance {
            get {
                return this.tWInstanceField;
            }
            set {
                this.tWInstanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TicketStatusID {
            get {
                return this.ticketStatusIDField;
            }
            set {
                this.ticketStatusIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TicketStatusDescription {
            get {
                return this.ticketStatusDescriptionField;
            }
            set {
                this.ticketStatusDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Urgent {
            get {
                return this.urgentField;
            }
            set {
                this.urgentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AssignedTo {
            get {
                return this.assignedToField;
            }
            set {
                this.assignedToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RequesterName {
            get {
                return this.requesterNameField;
            }
            set {
                this.requesterNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RequesterEmail {
            get {
                return this.requesterEmailField;
            }
            set {
                this.requesterEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RequesterTelephone {
            get {
                return this.requesterTelephoneField;
            }
            set {
                this.requesterTelephoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RequesterTimeZoneKey {
            get {
                return this.requesterTimeZoneKeyField;
            }
            set {
                this.requesterTimeZoneKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RequesterTimeZoneName {
            get {
                return this.requesterTimeZoneNameField;
            }
            set {
                this.requesterTimeZoneNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> RequesterTimeZoneBias {
            get {
                return this.requesterTimeZoneBiasField;
            }
            set {
                this.requesterTimeZoneBiasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ThirdParty {
            get {
                return this.thirdPartyField;
            }
            set {
                this.thirdPartyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ThirdPartyReference {
            get {
                return this.thirdPartyReferenceField;
            }
            set {
                this.thirdPartyReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ResolvedDate {
            get {
                return this.resolvedDateField;
            }
            set {
                this.resolvedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.closedDateField;
            }
            set {
                this.closedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClientImpactedName {
            get {
                return this.clientImpactedNameField;
            }
            set {
                this.clientImpactedNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ClientImpactedTitanID {
            get {
                return this.clientImpactedTitanIDField;
            }
            set {
                this.clientImpactedTitanIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SWRef {
            get {
                return this.sWRefField;
            }
            set {
                this.sWRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactEmail {
            get {
                return this.contactEmailField;
            }
            set {
                this.contactEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactEmailConfirmed {
            get {
                return this.contactEmailConfirmedField;
            }
            set {
                this.contactEmailConfirmedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactTelephone {
            get {
                return this.contactTelephoneField;
            }
            set {
                this.contactTelephoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CentreNumber {
            get {
                return this.centreNumberField;
            }
            set {
                this.centreNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CentreName {
            get {
                return this.centreNameField;
            }
            set {
                this.centreNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CentreEmail {
            get {
                return this.centreEmailField;
            }
            set {
                this.centreEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CentreTelephone {
            get {
                return this.centreTelephoneField;
            }
            set {
                this.centreTelephoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CentreCountry {
            get {
                return this.centreCountryField;
            }
            set {
                this.centreCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> NonContactCall {
            get {
                return this.nonContactCallField;
            }
            set {
                this.nonContactCallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ResolutionCode {
            get {
                return this.resolutionCodeField;
            }
            set {
                this.resolutionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> IssueTypeID {
            get {
                return this.issueTypeIDField;
            }
            set {
                this.issueTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SLADate {
            get {
                return this.sLADateField;
            }
            set {
                this.sLADateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string EmployeeId {
            get {
                return this.employeeIdField;
            }
            set {
                this.employeeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RequiredByDate {
            get {
                return this.requiredByDateField;
            }
            set {
                this.requiredByDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ServiceLostDate {
            get {
                return this.serviceLostDateField;
            }
            set {
                this.serviceLostDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ServiceRestoredDate {
            get {
                return this.serviceRestoredDateField;
            }
            set {
                this.serviceRestoredDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> agentTaskID {
            get {
                return this.agentTaskIDField;
            }
            set {
                this.agentTaskIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> systemSource {
            get {
                return this.systemSourceField;
            }
            set {
                this.systemSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SystemSourceName {
            get {
                return this.systemSourceNameField;
            }
            set {
                this.systemSourceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> systemSourceSubId {
            get {
                return this.systemSourceSubIdField;
            }
            set {
                this.systemSourceSubIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string systemSourceSubName {
            get {
                return this.systemSourceSubNameField;
            }
            set {
                this.systemSourceSubNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ClosureCodeID {
            get {
                return this.closureCodeIDField;
            }
            set {
                this.closureCodeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClosureCodeDesc {
            get {
                return this.closureCodeDescField;
            }
            set {
                this.closureCodeDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AssignedTeamID {
            get {
                return this.assignedTeamIDField;
            }
            set {
                this.assignedTeamIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AssignedTeamName {
            get {
                return this.assignedTeamNameField;
            }
            set {
                this.assignedTeamNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TitanCompanyId {
            get {
                return this.titanCompanyIdField;
            }
            set {
                this.titanCompanyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TitanBwRef {
            get {
                return this.titanBwRefField;
            }
            set {
                this.titanBwRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AssignedDate {
            get {
                return this.assignedDateField;
            }
            set {
                this.assignedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ticketAge {
            get {
                return this.ticketAgeField;
            }
            set {
                this.ticketAgeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string slaExpiry {
            get {
                return this.slaExpiryField;
            }
            set {
                this.slaExpiryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string websiteUrl {
            get {
                return this.websiteUrlField;
            }
            set {
                this.websiteUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InputTypeId {
            get {
                return this.inputTypeIdField;
            }
            set {
                this.inputTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RSCNameRegion {
            get {
                return this.rSCNameRegionField;
            }
            set {
                this.rSCNameRegionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReceiveDate {
            get {
                return this.receiveDateField;
            }
            set {
                this.receiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> VersionId {
            get {
                return this.versionIdField;
            }
            set {
                this.versionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ResponseTypeID {
            get {
                return this.responseTypeIDField;
            }
            set {
                this.responseTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> invisibleToCentre {
            get {
                return this.invisibleToCentreField;
            }
            set {
                this.invisibleToCentreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> typeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1531.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.regus.com/teamworks/webservices/CUSTSS/CSTS_ExternalIntegrations.tws")]
    public partial class TicketInfo {
        
        private System.Nullable<int> ticketReferenceField;
        
        private System.Nullable<System.DateTime> createDateField;
        
        private string createUserField;
        
        private System.Nullable<int> categoryIDField;
        
        private string categoryField;
        
        private System.Nullable<int> subCategoryIDField;
        
        private string subCategoryField;
        
        private System.Nullable<int> tWInstanceField;
        
        private System.Nullable<int> ticketStatusIDField;
        
        private string ticketStatusDescriptionField;
        
        private System.Nullable<int> priorityField;
        
        private System.Nullable<bool> urgentField;
        
        private string assignedToField;
        
        private string requesterNameField;
        
        private string requesterEmailField;
        
        private string requesterTelephoneField;
        
        private string thirdPartyField;
        
        private string thirdPartyReferenceField;
        
        private System.Nullable<System.DateTime> resolvedDateField;
        
        private System.Nullable<System.DateTime> closedDateField;
        
        private string contactNameField;
        
        private string contactEmailField;
        
        private string contactEmailConfirmedField;
        
        private string contactTelephoneField;
        
        private System.Nullable<int> centreNumberField;
        
        private string centreNameField;
        
        private string centreEmailField;
        
        private string centreTelephoneField;
        
        private string centreCountryField;
        
        private System.Nullable<bool> nonContactCallField;
        
        private System.Nullable<System.DateTime> sLADateField;
        
        private System.Nullable<System.DateTime> requiredByDateField;
        
        private System.Nullable<int> agentTaskIDField;
        
        private System.Nullable<int> systemSourceField;
        
        private string systemSourceNameField;
        
        private System.Nullable<int> systemSourceSubIdField;
        
        private string systemSourceSubNameField;
        
        private System.Nullable<int> closureCodeIDField;
        
        private string closureCodeDescField;
        
        private System.Nullable<int> assignedTeamIDField;
        
        private string assignedTeamNameField;
        
        private System.Nullable<int> titanCompanyIdField;
        
        private string titanBwRefField;
        
        private System.Nullable<System.DateTime> assignedDateField;
        
        private string ticketAgeField;
        
        private string slaExpiryField;
        
        private string websiteUrlField;
        
        private System.Nullable<int> inputTypeIdField;
        
        private string rSCNameRegionField;
        
        private System.Nullable<System.DateTime> receiveDateField;
        
        private System.Nullable<double> versionIdField;
        
        private System.Nullable<int> responseTypeIDField;
        
        private System.Nullable<bool> invisibleToCentreField;
        
        private System.Nullable<int> productTypeIDField;
        
        private System.Nullable<int> typeIdField;
        
        private string typeDescriptionField;
        
        private System.Nullable<int> adEscalationIdField;
        
        private string requesterTimeZoneKeyField;
        
        private string requesterTimeZoneNameField;
        
        private string requesterTimeZoneBiasField;
        
        private System.Nullable<bool> excludeAutoCloseTimeInMinutesField;
        
        private System.Nullable<bool> reopenedTicketField;
        
        private System.Nullable<bool> reopenTicketAvailableField;
        
        private string lockedByUserNameField;
        
        private System.Nullable<int> lockedByUserIdField;
        
        private System.Nullable<int> courtesyCallFeedIdField;
        
        private System.Nullable<int> courtesyCallStatusField;
        
        private System.Nullable<int> coutesyCallLogResponseIdField;
        
        private System.Nullable<int> lCIDField;
        
        private string gmEmployeeNameField;
        
        private string adEmployeeNameField;
        
        private string amEmployeeNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TicketReference {
            get {
                return this.ticketReferenceField;
            }
            set {
                this.ticketReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> CreateDate {
            get {
                return this.createDateField;
            }
            set {
                this.createDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CreateUser {
            get {
                return this.createUserField;
            }
            set {
                this.createUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CategoryID {
            get {
                return this.categoryIDField;
            }
            set {
                this.categoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Category {
            get {
                return this.categoryField;
            }
            set {
                this.categoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> SubCategoryID {
            get {
                return this.subCategoryIDField;
            }
            set {
                this.subCategoryIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SubCategory {
            get {
                return this.subCategoryField;
            }
            set {
                this.subCategoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TWInstance {
            get {
                return this.tWInstanceField;
            }
            set {
                this.tWInstanceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TicketStatusID {
            get {
                return this.ticketStatusIDField;
            }
            set {
                this.ticketStatusIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TicketStatusDescription {
            get {
                return this.ticketStatusDescriptionField;
            }
            set {
                this.ticketStatusDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> Urgent {
            get {
                return this.urgentField;
            }
            set {
                this.urgentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AssignedTo {
            get {
                return this.assignedToField;
            }
            set {
                this.assignedToField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RequesterName {
            get {
                return this.requesterNameField;
            }
            set {
                this.requesterNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RequesterEmail {
            get {
                return this.requesterEmailField;
            }
            set {
                this.requesterEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RequesterTelephone {
            get {
                return this.requesterTelephoneField;
            }
            set {
                this.requesterTelephoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ThirdParty {
            get {
                return this.thirdPartyField;
            }
            set {
                this.thirdPartyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ThirdPartyReference {
            get {
                return this.thirdPartyReferenceField;
            }
            set {
                this.thirdPartyReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ResolvedDate {
            get {
                return this.resolvedDateField;
            }
            set {
                this.resolvedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ClosedDate {
            get {
                return this.closedDateField;
            }
            set {
                this.closedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactName {
            get {
                return this.contactNameField;
            }
            set {
                this.contactNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactEmail {
            get {
                return this.contactEmailField;
            }
            set {
                this.contactEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactEmailConfirmed {
            get {
                return this.contactEmailConfirmedField;
            }
            set {
                this.contactEmailConfirmedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ContactTelephone {
            get {
                return this.contactTelephoneField;
            }
            set {
                this.contactTelephoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> CentreNumber {
            get {
                return this.centreNumberField;
            }
            set {
                this.centreNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CentreName {
            get {
                return this.centreNameField;
            }
            set {
                this.centreNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CentreEmail {
            get {
                return this.centreEmailField;
            }
            set {
                this.centreEmailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CentreTelephone {
            get {
                return this.centreTelephoneField;
            }
            set {
                this.centreTelephoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string CentreCountry {
            get {
                return this.centreCountryField;
            }
            set {
                this.centreCountryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> NonContactCall {
            get {
                return this.nonContactCallField;
            }
            set {
                this.nonContactCallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> SLADate {
            get {
                return this.sLADateField;
            }
            set {
                this.sLADateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> RequiredByDate {
            get {
                return this.requiredByDateField;
            }
            set {
                this.requiredByDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> agentTaskID {
            get {
                return this.agentTaskIDField;
            }
            set {
                this.agentTaskIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> systemSource {
            get {
                return this.systemSourceField;
            }
            set {
                this.systemSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SystemSourceName {
            get {
                return this.systemSourceNameField;
            }
            set {
                this.systemSourceNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> systemSourceSubId {
            get {
                return this.systemSourceSubIdField;
            }
            set {
                this.systemSourceSubIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string systemSourceSubName {
            get {
                return this.systemSourceSubNameField;
            }
            set {
                this.systemSourceSubNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ClosureCodeID {
            get {
                return this.closureCodeIDField;
            }
            set {
                this.closureCodeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ClosureCodeDesc {
            get {
                return this.closureCodeDescField;
            }
            set {
                this.closureCodeDescField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> AssignedTeamID {
            get {
                return this.assignedTeamIDField;
            }
            set {
                this.assignedTeamIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string AssignedTeamName {
            get {
                return this.assignedTeamNameField;
            }
            set {
                this.assignedTeamNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> TitanCompanyId {
            get {
                return this.titanCompanyIdField;
            }
            set {
                this.titanCompanyIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string TitanBwRef {
            get {
                return this.titanBwRefField;
            }
            set {
                this.titanBwRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> AssignedDate {
            get {
                return this.assignedDateField;
            }
            set {
                this.assignedDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string ticketAge {
            get {
                return this.ticketAgeField;
            }
            set {
                this.ticketAgeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string slaExpiry {
            get {
                return this.slaExpiryField;
            }
            set {
                this.slaExpiryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string websiteUrl {
            get {
                return this.websiteUrlField;
            }
            set {
                this.websiteUrlField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> InputTypeId {
            get {
                return this.inputTypeIdField;
            }
            set {
                this.inputTypeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RSCNameRegion {
            get {
                return this.rSCNameRegionField;
            }
            set {
                this.rSCNameRegionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> ReceiveDate {
            get {
                return this.receiveDateField;
            }
            set {
                this.receiveDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<double> VersionId {
            get {
                return this.versionIdField;
            }
            set {
                this.versionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> ResponseTypeID {
            get {
                return this.responseTypeIDField;
            }
            set {
                this.responseTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> invisibleToCentre {
            get {
                return this.invisibleToCentreField;
            }
            set {
                this.invisibleToCentreField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> productTypeID {
            get {
                return this.productTypeIDField;
            }
            set {
                this.productTypeIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> typeId {
            get {
                return this.typeIdField;
            }
            set {
                this.typeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string typeDescription {
            get {
                return this.typeDescriptionField;
            }
            set {
                this.typeDescriptionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> adEscalationId {
            get {
                return this.adEscalationIdField;
            }
            set {
                this.adEscalationIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RequesterTimeZoneKey {
            get {
                return this.requesterTimeZoneKeyField;
            }
            set {
                this.requesterTimeZoneKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RequesterTimeZoneName {
            get {
                return this.requesterTimeZoneNameField;
            }
            set {
                this.requesterTimeZoneNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RequesterTimeZoneBias {
            get {
                return this.requesterTimeZoneBiasField;
            }
            set {
                this.requesterTimeZoneBiasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> excludeAutoCloseTimeInMinutes {
            get {
                return this.excludeAutoCloseTimeInMinutesField;
            }
            set {
                this.excludeAutoCloseTimeInMinutesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> reopenedTicket {
            get {
                return this.reopenedTicketField;
            }
            set {
                this.reopenedTicketField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<bool> reopenTicketAvailable {
            get {
                return this.reopenTicketAvailableField;
            }
            set {
                this.reopenTicketAvailableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string lockedByUserName {
            get {
                return this.lockedByUserNameField;
            }
            set {
                this.lockedByUserNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> lockedByUserId {
            get {
                return this.lockedByUserIdField;
            }
            set {
                this.lockedByUserIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> courtesyCallFeedId {
            get {
                return this.courtesyCallFeedIdField;
            }
            set {
                this.courtesyCallFeedIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> courtesyCallStatus {
            get {
                return this.courtesyCallStatusField;
            }
            set {
                this.courtesyCallStatusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> coutesyCallLogResponseId {
            get {
                return this.coutesyCallLogResponseIdField;
            }
            set {
                this.coutesyCallLogResponseIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public System.Nullable<int> LCID {
            get {
                return this.lCIDField;
            }
            set {
                this.lCIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string gmEmployeeName {
            get {
                return this.gmEmployeeNameField;
            }
            set {
                this.gmEmployeeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string adEmployeeName {
            get {
                return this.adEmployeeNameField;
            }
            set {
                this.adEmployeeNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string amEmployeeName {
            get {
                return this.amEmployeeNameField;
            }
            set {
                this.amEmployeeNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    public delegate void CSTS_External_CreateTicketCompletedEventHandler(object sender, CSTS_External_CreateTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CSTS_External_CreateTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CSTS_External_CreateTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int ticketReference {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    public delegate void GetTicketByIdCompletedEventHandler(object sender, GetTicketByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTicketByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTicketByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TicketInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TicketInfo)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    public delegate void CloseTicketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    public delegate void SetTicketAsCompleteByCentreCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    public delegate void UpdateTicketCompletedEventHandler(object sender, UpdateTicketCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateTicketCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateTicketCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool privateComment {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int addCommsIncAllComms {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string addCommsTO {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string addCommsCC {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public bool nonContactPersonComms {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[5]));
            }
        }
        
        /// <remarks/>
        public bool hasBeenReassigned {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[6]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    public delegate void SetTicketAsUpdatedByCentreCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    public delegate void TicketLockingCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1531.0")]
    public delegate void processCourtesyCallsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591